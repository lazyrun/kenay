/*! \file Mind.h
    \brief 
    \author Kiselev Kirill
    \date 15.01.2013
*/

#ifndef Mind_H
#define Mind_H

#include "ImageProc.h"
#include "Solution.h"
#include "HoleCards.h"

/*!
\class Mind
\brief 
*/
class Mind
{
public:
      OverCard    = 1, // A2 
      OverCards   = 2, // AK
   
      BDStraight  = 3, // Бэкдорный стрит
      BDFlash     = 3, // Бэкдорный флеш
      Gutshot     = 3, // Гатшот
      OESD        = 3, // двусторонний
      FlashDraw   = 4,

   //сила пары
   enum PairPower
   {
      //1. пара на столе, туза у меня нет
      //2. пара на столе, туз есть
      //3. младшая пара
      //4. средняя пара
      //5. топ пара, туза нет
      //6. топ пара, туз есть
      //7. овер пара
   };
   
   //сила двух пар
   enum TwoPairPower
   {
      //1. две пары на столе, туза у меня нет
      //2. две пары на столе, туз есть
      //3. я участвую одной картой (на столе пара)
      //4. я участвую двумя картами (допер)
   };

   //сила тройки
   enum ThreeOfKindPower
   {
      //1. вся тройка на столе, туза у меня нет
      //2. вся тройка на столе, туз есть
      //3. я участвую одной картой (трипс, на столе пара)
      //4. я участвую двумя картами (сет)
   };

   //сила стрита
   enum StgaightPower
   {
      //1. весь стрит на столе, мои карты не участвуют
      //2. я участвую одной картой и закрываю стрит сверху
      //3. я участвую одной картой и закрываю стрит снизу
      //4. я участвую одной картой и закрываю стрит посередине
      //5. я участвую двумя картами снизу
      //6. я участвую двумя картами сверху
      //7. я участвую двумя картами как-то иначе
   };   

   //сила флеша
   enum FlashPower
   { 
      //1. весь флеш на столе, у меня нет ни одной карты такой же масти, либо все мои
      //   карты этой масти ниже карт на столе. Возможен раздел банка.
      //2. флеш составлен с одной моей картой (не туз)
      //3. флеш составлен с одной моей картой (туз)
      //4. флеш составлен с двумя моими картами (нет туза)
      //5. флеш составлен с двумя моими картами (есть туз)
   };

   //сила фулл-хауса
   enum FullHousePower
   {
      //1. весь фулл на столе, мои карты не участвуют
      //2. я участвую одной картой (на столе 2 пары)
      //3. я участвую двумя картами (на столе пара)
   };

   //сила карэ
   enum CarePower
   {
      //1. Каре на столе
      //2. я участвую одной картой (на столе тройка)
      //3. я участвую двумя картами (на столе пара)
   };

   //сила стрит-флеша
   enum StgaightFlashPower
   {
      //1. весь сф на столе, мои карты не участвуют
      //2. я участвую одной картой и закрываю стрит сверху
      //3. я участвую одной картой и закрываю стрит снизу
      //4. я участвую одной картой и закрываю стрит посередине
      //5. я участвую двумя картами снизу
      //6. я участвую двумя картами сверху
      //7. я участвую двумя картами как-то иначе
   };
   //! Текущие комбы
   enum Combs
   {
      Trash       = 0, //мусор
      LowPair     = 3,
      MiddlePair  = 4,
      TopPair     = 5,
      TPTK        = 6, //Top Pair Top Kicker
      OverPair    = 7,
      

      TwoPair     = 8, // 2 любые пары с моим участием
      Doper       = 9, // допер
      Trips       = 9, // 2 на столе, 1 у меня
      Set         = 9, // 2 у меня, 1 на столе
      Straight    = 10,
      
      Flash,
      FullHouse   = 12,
      Care        = 13,
      StraightFlash
   };
      
   //! Конструктор
   Mind(const CardProcessing * proc);
   //! Деструктор
   virtual ~Mind() {}
   //! 
   //virtual Solution think() = 0;
   //! 
   void setHole(const QString & f, const QString & s);
   //! 
   void setBoard(const QStringList & board);
   //! Текущая комбинация
   
protected:
   //! Обработчик изображений
   const CardProcessing * proc_;
   //! Карманные карты
   HoleCards hole_;
   //! Карты стола
   QStringList board_;
};

#endif

