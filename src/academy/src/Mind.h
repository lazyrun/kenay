/*! \file Mind.h
    \brief 
    \author Kiselev Kirill
    \date 15.01.2013
*/

#ifndef Mind_H
#define Mind_H

#include "ImageProc.h"
#include "Solution.h"
#include "HoleCards.h"
#include "Session.h"

/*!
\class Mind
\brief 
*/
class Mind
{
public:
   //сила пары
   enum PairPower
   {
      //1. пара на столе, туза у меня нет
      //2. пара на столе, туз есть
      //3. младшая пара
      //4. средняя пара
      //5. топ пара, туза нет
      //6. топ пара, туз есть
      //7. овер пара
   };
   
   //сила двух пар
   enum TwoPairPower
   {
      //1. две пары на столе, туза у меня нет
      //2. две пары на столе, туз есть
      //3. я участвую одной картой (на столе пара)
      //4. я участвую двумя картами (допер)
   };

   //сила тройки
   enum ThreeOfKindPower
   {
      //1. вся тройка на столе, туза у меня нет
      //2. вся тройка на столе, туз есть
      //3. я участвую одной картой (трипс, на столе пара)
      //4. я участвую двумя картами (сет)
   };

   //сила стрита
   enum StgaightPower
   {
      //1. весь стрит на столе, мои карты не участвуют
      //2. я участвую одной картой и закрываю стрит сверху
      //3. я участвую одной картой и закрываю стрит снизу
      //4. я участвую одной картой и закрываю стрит посередине
      //5. я участвую двумя картами снизу
      //6. я участвую двумя картами сверху
      //7. я участвую двумя картами как-то иначе
   };   

   //сила флеша
   enum FlashPower
   { 
      //1. весь флеш на столе, у меня нет ни одной карты такой же масти, либо все мои
      //   карты этой масти ниже карт на столе. Возможен раздел банка.
      //2. флеш составлен с одной моей картой (не натс)
      //3. флеш составлен с одной моей картой (натс, туз или если туз на столе, то король и т.д.)
      //4. флеш составлен с двумя моими картами (не натс, нет туза)
      //5. флеш составлен с двумя моими картами (натс, есть туз или если туз на столе, то король и т.д.)
   };

   //сила фулл-хауса
   enum FullHousePower
   {
      //1. весь фулл на столе, мои карты не участвуют
      //2. я участвую одной картой (на столе 2 пары)
      //3. я участвую двумя картами (на столе пара)
   };

   //сила карэ
   enum CarePower
   {
      //1. Каре на столе
      //2. я участвую одной картой (на столе тройка)
      //3. я участвую двумя картами (на столе пара)
   };

   //сила стрит-флеша
   enum StgaightFlashPower
   {
      //1. весь сф на столе, мои карты не участвуют
      //2. я участвую одной картой и закрываю стрит сверху
      //3. я участвую одной картой и закрываю стрит снизу
      //4. я участвую одной картой и закрываю стрит посередине
      //5. я участвую двумя картами снизу
      //6. я участвую двумя картами сверху
      //7. я участвую двумя картами как-то иначе
   };
   //! Возможные комбинации, без учета их силы
   enum Combs
   {
      Trash,         //мусор
      Card,          //старшая карта
      Pair,          //пара    
      TwoPair,       //две пары
      ThreeOfKind,   //тройка
      Straight,      //стрит
      Flash,         //флеш
      FullHouse,     //фулл
      Care,          //каре
      StraightFlash  //стрит флеш
   };
      
   //! Варианты имеющие шансы на усиление
   // предполагается, что часть карт от этих дро есть на руках
   enum Draws
   {
      OverCard,   // A2 
      OverCards,  // AK
      BDStraight, // Бэкдорный стрит
      BDFlash,    // Бэкдорный флеш
      Gutshot,    // Гатшот
      OESD,       // двусторонний или двойной белли бастер
      FlashDraw1, //флеш дро с 1й картой
      FlashDraw2, //флеш дро с 2мя картами
   };

   //! Конструктор
   Mind(CardProcessing * const proc, Session * const session);
   //! Деструктор
   virtual ~Mind() {}
   //! 
   virtual Solution think() = 0;
   //! 
protected:
   //! Обработчик изображений
   CardProcessing * const proc_;
   //! Текущая сессия
   Session * const session_;

   //! Карманные карты
   HoleCards hole_;
   //! Карты стола
   QStringList board_;
};

#endif

